[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/shangxin/esp-project/digital_twin_esp32c3/build/bootloader/esp-idf/esptool_py && /Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/shangxin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/shangxin/esp-project/digital_twin_esp32c3/build/bootloader/bootloader.bin
Bootloader binary size 0x5070 bytes. 0x2f90 bytes (37%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
/Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c:18:19: warning: excess elements in array initializer
   18 | int adc_raw[0] = {0x00};
      |                   ^~~~
/Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c:18:19: note: (near initialization for 'adc_raw')
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable main.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated /Users/shangxin/esp-project/digital_twin_esp32c3/build/main.bin
[9/10] cd /Users/shangxin/esp-project/digital_twin_esp32c3/build/esp-idf/esptool_py && /Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/shangxin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/shangxin/esp-project/digital_twin_esp32c3/build/partition_table/partition-table.bin /Users/shangxin/esp-project/digital_twin_esp32c3/build/main.bin
main.bin binary size 0x2c330 bytes. Smallest app partition is 0x100000 bytes. 0xd3cd0 bytes (83%) free.
[9/10] cd /Users/shangxin/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.29.0/bin/cmake -D IDF_PATH=/Users/shangxin/esp/esp-idf -D "SERIAL_TOOL=/Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/Users/shangxin/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32c3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/shangxin/esp-project/digital_twin_esp32c3/build -P /Users/shangxin/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32c3 -p /dev/cu.usbserial-11140 -b 1000000 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/cu.usbserial-11140
Connecting....
Chip is ESP32-C3 (QFN32) (revision v0.3)
Features: WiFi, BLE, Embedded Flash 4MB (XMC)
Crystal is 40MHz
MAC: 7c:df:a1:c2:51:ec
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 1000000
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 20592 bytes to 12641...
Writing at 0x00000000... (100 %)
Wrote 20592 bytes (12641 compressed) at 0x00000000 in 0.5 seconds (effective 309.6 kbit/s)...
Hash of data verified.
Compressed 181040 bytes to 94710...
Writing at 0x00010000... (16 %)
Writing at 0x0001ac0e... (33 %)
Writing at 0x000215eb... (50 %)
Writing at 0x000289c9... (66 %)
Writing at 0x0002f6d5... (83 %)
Writing at 0x00036b31... (100 %)
Wrote 181040 bytes (94710 compressed) at 0x00010000 in 3.1 seconds (effective 465.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 341.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
