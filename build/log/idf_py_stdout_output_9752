[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/shangxin/esp-project/digital_twin_esp32c3/build/bootloader/esp-idf/esptool_py && /Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/shangxin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/shangxin/esp-project/digital_twin_esp32c3/build/bootloader/bootloader.bin
Bootloader binary size 0x5070 bytes. 0x2f90 bytes (37%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
/Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c:19:19: warning: excess elements in array initializer
   19 | int adc_raw[0] = {0x00};
      |                   ^~~~
/Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c:19:19: note: (near initialization for 'adc_raw')
/Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c:18:20: warning: 'TAG' defined but not used [-Wunused-variable]
   18 | const static char *TAG = "DEV";
      |                    ^~~
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/main.elf.dir/project_elf_src_esp32c3.c.obj
[8/10] Linking CXX executable main.elf
[9/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated /Users/shangxin/esp-project/digital_twin_esp32c3/build/main.bin
[10/10] cd /Users/shangxin/esp-project/digital_twin_esp32c3/build/esp-idf/esptool_py && /Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/shangxin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/shangxin/esp-project/digital_twin_esp32c3/build/partition_table/partition-table.bin /Users/shangxin/esp-project/digital_twin_esp32c3/build/main.bin
main.bin binary size 0x2c2e0 bytes. Smallest app partition is 0x100000 bytes. 0xd3d20 bytes (83%) free.
