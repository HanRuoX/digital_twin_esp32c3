[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/shangxin/esp-project/digital_twin_esp32c3/build/bootloader/esp-idf/esptool_py && /Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/shangxin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/shangxin/esp-project/digital_twin_esp32c3/build/bootloader/bootloader.bin
Bootloader binary size 0x5070 bytes. 0x2f90 bytes (37%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from /Users/shangxin/esp/esp-idf/components/esp_hw_support/include/esp_intr_alloc.h:11,
                 from /Users/shangxin/esp/esp-idf/components/esp_hw_support/include/esp_cpu.h:20,
                 from /Users/shangxin/esp/esp-idf/components/esp_hw_support/include/spinlock.h:11,
                 from /Users/shangxin/esp/esp-idf/components/freertos/FreeRTOS-Kernel/portable/riscv/include/freertos/portmacro.h:45,
                 from /Users/shangxin/esp/esp-idf/components/freertos/FreeRTOS-Kernel/include/freertos/portable.h:59,
                 from /Users/shangxin/esp/esp-idf/components/freertos/FreeRTOS-Kernel/include/freertos/FreeRTOS.h:71,
                 from /Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c:9:
/Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c: In function 'app_main':
/Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c:39:70: warning: passing argument 3 of 'adc_oneshot_read' from incompatible pointer type [-Wincompatible-pointer-types]
   39 |         ESP_ERROR_CHECK(adc_oneshot_read(adc1_handle, ADC_CHANNEL_2, &adc_raw));
      |                                                                      ^~~~~~~~
      |                                                                      |
      |                                                                      uint16_t * {aka short unsigned int *}
/Users/shangxin/esp/esp-idf/components/esp_common/include/esp_err.h:117:30: note: in definition of macro 'ESP_ERROR_CHECK'
  117 |         esp_err_t err_rc_ = (x);                                        \
      |                              ^
In file included from /Users/shangxin/esp-project/digital_twin_esp32c3/main/main.c:13:
/Users/shangxin/esp/esp-idf/components/esp_adc/include/esp_adc/adc_oneshot.h:89:87: note: expected 'int *' but argument is of type 'uint16_t *' {aka 'short unsigned int *'}
   89 | esp_err_t adc_oneshot_read(adc_oneshot_unit_handle_t handle, adc_channel_t chan, int *out_raw);
      |                                                                                  ~~~~~^~~~~~~
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable main.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated /Users/shangxin/esp-project/digital_twin_esp32c3/build/main.bin
[9/10] cd /Users/shangxin/esp-project/digital_twin_esp32c3/build/esp-idf/esptool_py && /Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/shangxin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/shangxin/esp-project/digital_twin_esp32c3/build/partition_table/partition-table.bin /Users/shangxin/esp-project/digital_twin_esp32c3/build/main.bin
main.bin binary size 0x2c320 bytes. Smallest app partition is 0x100000 bytes. 0xd3ce0 bytes (83%) free.
[9/10] cd /Users/shangxin/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.29.0/bin/cmake -D IDF_PATH=/Users/shangxin/esp/esp-idf -D "SERIAL_TOOL=/Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/Users/shangxin/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32c3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/shangxin/esp-project/digital_twin_esp32c3/build -P /Users/shangxin/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32c3 -p /dev/cu.usbserial-11140 -b 1000000 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/cu.usbserial-11140
Connecting....
Chip is ESP32-C3 (QFN32) (revision v0.3)
Features: WiFi, BLE, Embedded Flash 4MB (XMC)
Crystal is 40MHz
MAC: 7c:df:a1:c2:51:ec
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 1000000
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 20592 bytes to 12641...
Writing at 0x00000000... (100 %)
Wrote 20592 bytes (12641 compressed) at 0x00000000 in 0.5 seconds (effective 309.7 kbit/s)...
Hash of data verified.
Compressed 181024 bytes to 94712...
Writing at 0x00010000... (16 %)
Writing at 0x0001ac0b... (33 %)
Writing at 0x000215dd... (50 %)
Writing at 0x000289b8... (66 %)
Writing at 0x0002f6cb... (83 %)
Writing at 0x00036b2c... (100 %)
Wrote 181024 bytes (94712 compressed) at 0x00010000 in 3.1 seconds (effective 465.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 341.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
