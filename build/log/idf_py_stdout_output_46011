[1/9] Performing build step for 'bootloader'
[1/1] cd /Users/shangxin/esp-project/digital_twin_esp32c3/build/bootloader/esp-idf/esptool_py && /Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/shangxin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/shangxin/esp-project/digital_twin_esp32c3/build/bootloader/bootloader.bin
Bootloader binary size 0x5070 bytes. 0x2f90 bytes (37%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/websocket_task/websocket_task.c.obj
In file included from /Users/shangxin/esp-project/digital_twin_esp32c3/main/websocket_task/websocket_task.c:1:
/Users/shangxin/esp-project/digital_twin_esp32c3/main/websocket_task/websocket_task.h:38:13: warning: 'get_string' declared 'static' but never defined [-Wunused-function]
   38 | static void get_string(char *line, size_t size);
      |             ^~~~~~~~~~
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable main.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32c3 image...
Merged 2 ELF sections
Successfully created esp32c3 image.
Generated /Users/shangxin/esp-project/digital_twin_esp32c3/build/main.bin
[9/9] cd /Users/shangxin/esp-project/digital_twin_esp32c3/build/esp-idf/esptool_py && /Users/shangxin/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/shangxin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/shangxin/esp-project/digital_twin_esp32c3/build/partition_table/partition-table.bin /Users/shangxin/esp-project/digital_twin_esp32c3/build/main.bin
main.bin binary size 0xee510 bytes. Smallest app partition is 0x100000 bytes. 0x11af0 bytes (7%) free.
